networks:
  spark-net:
    driver: overlay

services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-datawarehouse}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - spark-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker

  spark-master:
    image: dreadew/spark-delta:main
    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: 0.0.0.0
      SPARK_MASTER_PORT: 7077
      SPARK_MASTER_WEBUI_PORT: 8080
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY:-minioadmin}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_KEY:-minioadmin}
      S3_ENDPOINT: ${S3_PROTOCOL:-http}://${S3_HOST:-minio}:${S3_PORT:-9000}
      SPARK_RPC_AUTHENTICATION_ENABLED: no
      SPARK_RPC_ENCRYPTION_ENABLED: no
      SPARK_SSL_ENABLED: no
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - spark-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  spark-worker:
    image: dreadew/spark-delta:main
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 7077
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 8g
      SPARK_WORKER_WEBUI_PORT: 8081
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY:-minioadmin}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_KEY:-minioadmin}
      S3_ENDPOINT: ${S3_PROTOCOL:-http}://${S3_HOST:-minio}:${S3_PORT:-9000}
    ports:
      - "8081:8081"
    volumes:
      - spark_apps:/opt/spark-apps
      - spark_data:/opt/spark-data
    networks:
      - spark-net
    deploy:
      replicas: 2
      placement:
        # constraints:
        #   - node.role == worker
        preferences:
          - spread: node.id

  jupyter:
    image: dreadew/jupyter-spark:main
    ports:
      - "8888:8888"
    environment:
      JUPYTER_TOKEN: ${JUPYTER_TOKEN}
      SPARK_URL: ${SPARK_URL}
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
      S3_ENDPOINT: ${S3_PROTOCOL:-http}://${S3_HOST:-minio}:${S3_PORT:-9000}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minioadmin}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minioadmin}
      S3_BUCKETS: ${S3_BUCKETS}
    networks:
      - spark-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - spark-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker

volumes:
  postgres_data:
  minio_data:
  spark_apps:
  spark_data:
